@page "/register";

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Iniciar Sesión</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            min-height: 1vh;
            background: linear-gradient(#a2b8f4, #5271d3);
            /* background-image: url('https://img.freepik.com/free-vector/blue-copy-space-digital-background_23-2148821698.jpg?t=st=1725337519~exp=1725341119~hmac=35a659d27bb44112797a0eedd4f66c9581175a6ebf7ac31dd39d54e746257bfd&w=1380');
                    background-size: cover;
                    background-position: center; */
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            overflow: hidden;
        }

        .custom-placeholder::placeholder {
            color: white;
            opacity: 1;
        }
    </style>
</head>

<div class="flex items-center justify-center h-screen">
    <div class="bg-white bg-opacity-10 backdrop-blur-md p-8 rounded-lg shadow-lg w-96">
        <h2 class="text-3xl font-bold text-white mb-6 text-center">Registro</h2>
        <EditForm Model="@Register" OnValidSubmit="RegisterClicked">
            <DataAnnotationsValidator />

            <div class="mb-4">
                <label class="block text-white text-sm font-bold mb-2">Nombre</label>
                <div class="relative">
                    <InputText @bind-Value="Register.Name"
                               class="w-full p-3 text-white bg-transparent border-b-2 border-gray-300 focus:outline-none focus:border-white custom-placeholder"
                               placeholder="Nombre" />
                    <i class="fas fa-user absolute right-3 top-3 text-white"></i>
                </div>
            </div>

            <div class="mb-4">
                <label class="block text-white text-sm font-bold mb-2">Email</label>
                <div class="relative">
                    <InputText @bind-Value="Register.Email"
                               class="w-full p-3 text-white bg-transparent border-b-2 border-gray-300 focus:outline-none focus:border-white custom-placeholder"
                               placeholder="Email" />
                    <i class="fas fa-envelope absolute right-3 top-3 text-white"></i>
                </div>
            </div>

            <div class="mb-4">
                <label class="block text-white text-sm font-bold mb-2">Contraseña</label>
                <div class="relative">
                    <InputText @bind-Value="Register.Password"
                               class="w-full p-3 text-white bg-transparent border-b-2 border-gray-300 focus:outline-none focus:border-white custom-placeholder"
                               placeholder="Contraseña" type="password" />
                    <i class="fas fa-lock absolute right-3 top-3 text-white"></i>
                </div>
            </div>

            <div class="mb-4">
                <label class="block text-white text-sm font-bold mb-2">Confirmar Contraseña</label>
                <div class="relative">
                    <InputText @bind-Value="Register.ConfirmPassword"
                               class="w-full p-3 text-white bg-transparent border-b-2 border-gray-300 focus:outline-none focus:border-white custom-placeholder"
                               placeholder="Confirmar Contraseña" type="password" />
                    <i class="fas fa-lock absolute right-3 top-3 text-white"></i>
                </div>
            </div>

            <div class="mb-6">
                <button class="w-full bg-white text-gray-800 font-bold py-3 px-4 rounded-full hover:bg-gray-200 focus:outline-none focus:shadow-outline" type="submit">
                    Registrarse
                </button>
            </div>
            <div class="text-center">
                <p class="text-white text-sm">Ya tengo una cuenta <a class="font-bold hover:underline" href=""> Iniciar Sesion</a></p>
            </div>
            <ValidationSummary />
        </EditForm>
    </div>
</div>



@* <div class="container">hgfhg
    <div class="row">
        <div class="col-sm-4">
            <h2>Login</h2>
            <EditForm Model="Register" OnValidSubmit="RegisterClicked">
                <DataAnnotationsValidator />
                <div class="form-group mt-3">
                    <label class="form-label">Name</label>
                    <InputText @bind-Value="Register.Name" class="form-control"> </InputText>
                </div>
                <div class="form-group mt-3">
                    <label class="form-label">Email Address</label>
                    <InputText @bind-Value="Register.Email" class="form-control"> </InputText>
                </div>
                <div class="form-group mt-3">
                    <label class="form-label">Password</label>
                    <InputText @bind-Value="Register.Password" class="form-control"> </InputText>
                </div>
                <div class="form-group mt-3">
                    <label class="form-label">Confirm Password</label>
                    <InputText @bind-Value="Register.ConfirmPassword" class="form-control"> </InputText>
                </div>
                <div class="form-group mt-3">
                    <label class="form-label">Role</label>
                    <InputText @bind-Value="Register.Role" class="form-control"> </InputText>
                </div>
                <div class="form-group mt-3">
                    <button class="btn btn-primary" type="submit">Login</button>
                </div>
                <ValidationSummary />
            </EditForm>
        </div>
    </div>
</div> *@

@code {
    public RegisterDTO Register = new();

    protected override async Task OnInitializedAsync()
    {
        LoginResponse response = await accountService.LogoutAsync();
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        customAuthStateProvider.UpdateNotAuthenticationState();

    }

    async Task RegisterClicked()
    {
        Register.Role = "User";
        RegistrationResponse response = await accountService.RegisterAsync(Register);
        if (!response.Flag)
        {
            await js.InvokeVoidAsync("alert", response.Message);
            return;
        }
        await js.InvokeVoidAsync("alert", response.Message);
        Register = new();
        return;
    }
}
